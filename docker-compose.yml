version: "3.8"

services:
  db:
    image: postgres:15
    container_name: document_service_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - document_service_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: document_service_api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG:-True}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "127.0.0.1:8000:8000" 
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - db
    networks:
      - document_service_network

volumes:
  postgres_data:

networks:
  document_service_network:
    driver: bridge
